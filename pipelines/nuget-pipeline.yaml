name: $(Date:yyyyMMdd)$(Rev:.rr)

trigger:
  branches:
    exclude:
    - "*"

pool:
  vmImage: ubuntu-latest

parameters:
- name: project
  type: string
  default: 'yozepi.ConfigToJson/yozepi.ConfigToJson.csproj'

- name: title
  type: string
  default: 'ConfigToJson'

- name: major-version
  type: string
  default: '1'

- name: minor-version
  type: string
  default: '0'

- name: baseFolder
  type: string
  default: '/src'

- name: artifactName
  type: string
  default: 'build-artifacts'

- name: skipBuild
  type: boolean
  default: false

variables:
- name: major-version
  value: 1
  
- name: minor-version
  value: 1
  
- name: patch-version
  value: $[counter(format('{0}.{1}', variables['major-version'], variables['minor-version']), 0)]

- name: full-version
  value: '$(major-version).$(minor-version)).$(patch-version)'

steps:

- task: DotNetCoreCLI@2
  displayName: 'NuGet Pack ${{ coalesce(parameters.title, parameters.project) }}'
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.Repository.LocalPath)${{ parameters.baseFolder }}/${{ parameters.project }}'
    packDirectory: '$(Build.ArtifactStagingDirectory)/nupkgs'
    nobuild: ${{ parameters.skipBuild }}
    versioningScheme: byEnvVar
    versionEnvVar: 'full-version'

- task: PublishBuildArtifacts@1
  displayName: Publish the Package Artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '${{ parameters.artifactName }}'
    publishLocation: 'Container'
    
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: 'yozepi-nuget'