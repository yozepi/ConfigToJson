name: $(Date:yyyyMMdd)$(Rev:.rr)
parameters:
- name: artifactName
  type: string
  default: 'build-artifacts'


trigger:
  branches:
    exclude:
    - "*"

pool:
  vmImage: ubuntu-latest

variables:
- name: major-version
  value: '1'
- name: minor-version
  value: '0'
- name: patch-version
  value: $[counter(format('{0}.{1}', variables['major-version'], variables['minor-version']), 0)]

- name: full-version
  value: '$(major-version).$(minor-version).$(patch-version)'

steps:

- task: DotNetCoreCLI@2
  displayName: 'Pack --name--'
  inputs:
    command: 'pack'
    packagesToPack: '**/yozepi.ConfigToJson.csproj.csproj'
    packDirectory: '$(Build.ArtifactStagingDirectory)/nupkgs'
    nobuild: false
    includesymbols: true
    includesource: true
    versioningScheme: byEnvVar
    versionEnvVar: 'full-version'

- task: PublishBuildArtifacts@1
  displayName: Publish the Package Artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '${{ parameters.artifactName }}'
    publishLocation: 'Container'
    
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: 'yozepi-nuget'